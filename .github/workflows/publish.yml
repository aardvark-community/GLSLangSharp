name: Publish
on:
  push:
    branches:
      - master
    paths:
      - RELEASE_NOTES.md
      - .github/workflows/publish.yml
jobs:
  build:
    name: "Build"
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-22.04, windows-2022, macos-13, macos-14]
            include:
              - os: ubuntu-22.04
                build: ./buildnative.sh
                name: linux
              - os: windows-2022
                build: .\buildnative.cmd
                name: windows
              - os: macos-13
                build: ./buildnative.sh x86_64
                name: osxm1
              - os: macos-14
                build: ./buildnative.sh arm64
                name: osx
    steps:
      - uses: actions/checkout@v4
      - name: Build Native Libraries
        run: ${{ matrix.build }}
      - name: Install Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Restore Tools
        run: dotnet tool restore
      - name: Restore
        run: dotnet paket restore
      - name: Test
        run: dotnet run --project src/Compiler/Compiler.fsproj
      - name: Upload native libs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: libs/Native/
  pack:
    name: "Pack"
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download OSX dependencies (x64)
        uses: actions/download-artifact@v4
        with:
          name: osx
          path: libs/Native/
      - name: Download OSX dependencies (arm64)
        uses: actions/download-artifact@v4
        with:
          name: osxm1
          path: libs/Native/
      - name: Download Linux dependencies
        uses: actions/download-artifact@v4
        with:
          name: linux
          path: libs/Native/
      - name: Download Windows dependencies
        uses: actions/download-artifact@v4
        with:
          name: windows
          path: libs/Native/
      - name: Install Dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: Restore Tools
        run: dotnet tool restore
      - name: Restore
        run: dotnet paket restore
      - name: Build
        run: dotnet build src\GLSLang.sln -c Release
      - name: Pack
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: dotnet aardpack src\GLSLang.sln -c Release --skip-build
      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: bin\pack
      - name: GitHub Packages
        env:
          NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}
        shell: cmd
        run: dotnet nuget push "bin\pack\*.nupkg" -k %NUGET_KEY% -s "https://nuget.pkg.github.com/aardvark-community/index.json" --skip-duplicate
      - name: NuGet
        env:
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        shell: cmd
        run: dotnet nuget push "bin\pack\*.nupkg" -k %NUGET_KEY% -s "https://api.nuget.org/v3/index.json" --skip-duplicate
